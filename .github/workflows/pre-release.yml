name: Draft Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  prerelease:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-deps

      - name: Set version vars and verify tag matches version
        id: versions
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "‚ùå Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi

      - name: Build project
        run: npm run build

      - name: Run unit tests
        run: npm run test:unit

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist  # adjust path to your actual build output

      - name: Generate release notes from git diff
        id: release_notes
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          NOTES=$(git log "$PREV_TAG"..HEAD --pretty=format:"- %s (%h)")
          echo "changelog<<EOF" >> $GITHUB_ENV
          echo "## Changes\n\n$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create draft GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Dashly ${{ steps.versions.outputs.tag_version }}"
          body: ${{ env.changelog }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
