name: Release Workflow

on:
  release:
    types: [ published ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-deps

      - name: Verify tag matches package.json version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi

      - name: Build the project
        run: npm run build

      - name: Run unit tests
        run: npm run test:unit

      - name: Prepare E2E Environment
        run: npm run prepare:e2e

      - name: Run e2e test
        run: npm run test:e2e

      - name: Publish to npm (dry-run)
        if: github.event.release.prerelease == true
        run: npm publish --dry-run

      - name: Publish to npm (real)
        if: github.event.release.prerelease == false
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Bump version for new development iteration
        if: github.event.release.prerelease == false
        run: |
          NEW_VERSION=$(node -p "require('semver').inc(require('./package.json').version, 'minor')")
          echo "New development version: $NEW_VERSION"
          npm version $NEW_VERSION --no-git-tag-version
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore: start new development iteration $NEW_VERSION"
          git push origin HEAD